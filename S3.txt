S3:
+++++++++++++
Simple Storage Service is a secure, durable and highly scalable object storage.
s3 is easy to use, wih simple web services interface to store and retrive any amount of data
from anywhere on the web.

Advanatages:
++++++++
- Built for 99.99% availability for the s3 platform
- Amazon guarantee 99.999999% durability
- Tiered storage available
- Lifecycle management
- Versioning
- Encryption
- Secure your data using ACL(Access Control List) & Bucket policy.

what is object storage:
+++++++++
Every file is an object
config.json files, audio, video & Images

Creating bucket
----------------------
Services ----> Storage ----> S3

Create Bucket 
Bucket Name  -         ( It should be unique globally )
		( No uppercase )
		( should not contain invalid char like '  ,  [  #      )
Check bucket name restriction in google

bucket name -  test-dsgdfsgdfsgdfs123
regions  -  mumbai      
Next ---> Next --> uncheck  block public access  ---> Next ----> Create bucket.

Note:  Buckets created are available global. Not like Ec2  machines
	Observation: We can see global in dashboard.

Create another bucker
bucket name -  demo-dsgdfsgdfsgdfs123
Select region as -  Singapore  

Observe: Both the buckets are available in the dashboard.


How to Upload the objects ( data ) in the bucket?
-------------------------------------------------------
click on the  test bucket
Upload ---> Add files ---> select any image ---> Next ---> Manage public permissions --> Grant public read access  ---> Next ---> Next ---> Upload

Note:  As bucket is public,  and object is also public,   anyone in the world can access the content.

Click on the Object ---> Get Object URL  
Using Object URL, anyone can access.

Topics
-----------
1) Versioning - (backup)
2) Static  website hosting
3) classes/ tiers
4) Cross region replication
5) Transfer Accelaration
6) encryption
7) tags
8) metadata
9) ACL
10) Bucket policies
11) Life cycle management


+++++++++++++++++++++++++++++++++++++

Versioning:

Create new bucket
Bucket Name -- version-sfdsafdsafsd
Region - mumbai
Next ---> Next ---> un check Block all public access
Next ---> create bucket.

How to enable versioning ?
----------------------------------
Click on the bucket  ---> Properties tab
( Observation: By default version is disabled )

Edit --- Enable 
Save Changes.



Lets upload one object
-------------------------------
Create simple text file , content of the file  let it be   "My First Line"
Upload the file --->  Next --> Grant public access --> Next --> Next ---> Upload


First  advantage of versioning
------------------------------------
We can recover deleted object.

Lets delete the object.
Select the check box--> Actions ---> Delete  

How can we recover?
--------------------------------
Enable list version
We can see the object and its delete marker.



Note:  When we delete, object is not deleted.
            It is marked as deleted.
	So, If you remove the delete marker, We will get the  object.

select the delete marker check box --->  Actions ---> Delete --> Delete

Now, Disable list version
Our object is back!!!




2nd advantage: We can maintain different versions of the file
----------------------------------------------------------------------------------
Open the same file in the desktop (reseume.txt)
Add another line "My second line"


Upload the same file again.
Get the object URL, and check from brower, we get the latest file.

Where can we see the older versions of the file?
----------------------------------------------------------
Show list version

we can see both the versions
and we can download the older vesions of the file.

Even if you delete the file, we can recover both the versions.
Select the object --> actions ---> delete ---> delete

select show button
We can see both the versions of the file.


If you delete individual versions,  we cannot recover.

Note: If you delete bucket, we cannot recover.
Lets delete the bucket.

Now, the dashboard is empty.

++++++++++++++++++++++++++++++++++++++
Static website hosting
----------------------------

Lets create a bucket
Bucket name -  bucket-3454346
Next ---> Next ---> uncheck  block all public access  --> Next -----> Create bucket.


Select the bucket ----> Properties ---> Static website hosting ----> Edit --->Enable -- Host a static website ---


index document -   index.html
error document -  error.html
Save


Now, we need to create index.html  and error.html

Upload index.html  and error.html ---> Next ---> Next ---> Next -- Upload
 
Now, go to the properties of the bucket  ---> Static  website hosting --> get URL of the website ( endpoint )

Note:  Individual files should have public access.

What is the use of error.html?
----------------------------------
Incase of any reason, if index.html is not accessible
then error page will be displayed.

Lets make the index.html page as private.
select index.html -->ACL --- Edit --> public access -- read - uncheck -- Save Changes

Now, refresh the URL, we get error.html page!!!

Lest Delete the files ---- and Delete the bucket.
++++++++++++++


CRR   ( Cross region replication ) 
-----------------------------------------
Lets say, we have two buckets ( 1st bucket in Calfornia
			   2nd  bucket in sydney)

We we upload the object in calfornia,  the object should also be available in sydney ).

As we are replicating an object in another region, it is called cross region replication.

vice-versa will not happen.
If we delete object in mumbai, it will not be deleted in sydney.
If we edit object in mumbai, it will not de edited in sydney.

Lets  create  bucket
bucket name -  calfornia-sfsdfgds
Region - calfornia
Next ----> Next ---> uncheck block all public access
Next ---> create bucket.


Lets create 2nd bucket in sydney
Lets  create  bucket
bucket name -  sydney-fhgfhfd
Region - sydney
Next ----> Next ---> uncheck block all public access
Next ---> create bucket.


Enable cross region replication in calfornia bucket
--------------------------------------------------


Select calfornia bucket --> Management ---> Replication Rules--> Create Replication Rule ---> Enable Bucket versioning ---> Replication Rule Name -  CRR1

 Destination bucket --> Sydney bucket  --> Enable versioning --->  ---> IAM Role --> 

( TO establish connection between two regions, we need role )

IAM Role - Create new role 
Save.



Now, lets upload object in calfornia  bucket, it will be replicated in sydney bucket!!!!

++++++++++++++++++++++++




Topics
-----------
1) Versioning
2) Static  website hsoting
3) classes/ tiers
4) Cross region replication
5) Transfer Accelaration
6) encryption
7) tags
8) metadata
9) ACL
10) Bucket policies
11) Life cycle management


+++++++++++++++++++++++++++++++++++++


Create new bucket
Bucket Name -- version-sfdsafdsafsd
Region - mumbai
Next ---> Next ---> un check Block all public access
Next ---> create bucket.

How to enable versioning ?
----------------------------------
Click on the bucket  ---> Properties tab
( Observation: By default version is disabled )

Edit --- Enable 
Save Changes.



Lets upload one object
-------------------------------
Create simple text file , content of the file  let it be   "My First Line"
Upload the file --->  Next --> Grant public access --> Next --> Next ---> Upload


First  advantage of versioning
------------------------------------
We can recover deleted object.

Lets delete the object.
Select the check box--> Actions ---> Delete  

How can we recover?
--------------------------------
Enable list version
We can see the object and its delete marker.



Note:  When we delete, object is not deleted.
            It is marked as deleted.
	So, If you remove the delete marker, We will get the  object.

select the delete marker check box --->  Actions ---> Delete --> Delete

Now, Disable list version
Our object is back!!!




2nd advantage: We can maintain different versions of the file
----------------------------------------------------------------------------------
Open the same file in the desktop
Add another line "My second line"


Upload the same file again.
Get the object URL, and check from brower, we get the latest file.

Where can we see the older versions of the file?
----------------------------------------------------------
Show list version

we can see both the versions
and we can download the older vesions of the file.

Even if you delete the file, we can recover both the versions.
Select the object --> actions ---> delete ---> delete

select show button
We can see both the versions of the file.


If you delete individual versions,  we cannot recover.

Note: If you delete bucket, we cannot recover.
Lets delete the bucket.

Now, the dashboard is empty.

++++++++++++++++++++++++++++++++++++++
Static website hosting
----------------------------

Lets create a bucket
Bucket name -  bucket-3454346
Next ---> Next ---> uncheck  block all public access  --> Next -----> Create bucket.


Select the bucket ----> Properties ---> Static website hosting ----> Edit --->Enable -- Host a static website ---


index document -   index.html
error document -  error.html
Save


Now, we need to create index.html  and error.html

Upload index.html  and error.html ---> Next ---> Next ---> Next -- Upload
 
Now, go to the properties of the bucket  ---> Static  website hosting --> get URL of the website ( endpoint )

Note:  Individual files should have public access.

What is the use of error.html?
----------------------------------
Incase of any reason, if index.html is not accessible
then error page will be displayed.

Lets make the index.html page as private.
select index.html -->ACL --- Edit --> public access -- read - uncheck -- Save Changes

Now, refresh the URL, we get error.html page!!!

Lest Delete the files ---- and Delete the bucket.
++++++++++++++


CRR   ( Cross region replication ) 
-----------------------------------------
Lets say, we have two buckets ( 1st bucket in mumbai
			   2nd  bucket in sydney )

We we upload the object in mumbai,  the object should also be available in sydney ).

As we are replicating an object in another region, it is called cross region replication.

vice-versa will not happen.
If we delete object in mumbai, it will not be deleted in sydney.
If we edit object in mumbai, it will not de edited in sydney.

Lets  create  bucket
bucket name -  mumbai-sfsdfgds
Region - mumbai
Next ----> Next ---> uncheck block all public access
Next ---> create bucket.


Lets create 2nd bucket in sydney
Lets  create  bucket
bucket name -  sydney-fhgfhfd
Region - sydney
Next ----> Next ---> uncheck block all public access
Next ---> create bucket.


Enable cross region replication in mumbai bucket
--------------------------------------------------


Select mumbai bucket --> Management ---> Replication Rules--> Create Replication Rule ---> Enable Bucket versioning ---> Replication Rule Name -  CRR1

 Destination bucket --> Sydney bucket  --> Enable versioning --->  ---> IAM Role --> 

( TO establish connection between two regions, we need role )

IAM Role - Create new role 
Save.



Now, lets upload object in mumbai  bucket, it will be replicated in sydney bucket!!!!

++++++++++++++++++++++++


Transfer Accelaration  ( Have a look at ppt )
-------------------------
When we enable transfer accelaration, data will be transferred to edge location and then  from edge location data will be transferred to bucket.
( Look at the image )
Amazon S3 Transfer Acceleration is a bucket-level feature that enables fast, easy, and secure transfers of files over long distances between your client and an S3 bucket. 
Transfer Acceleration is designed to optimize transfer speeds from across the world into S3 buckets.

Select mumbai bucket --->Properties ---> Transfer accelaration --->Edit ---> Enabled --- Save Changes.

How can we check the speed?
---------------------------------------
Properties -------> Transfer accelaration --> Learn More

 Amazon S3 Transfer Acceleration Speed Comparison tool


---> want to compare your data transfer speed by region ( open in new tab )

we can compare
S3  direct upload speed
S3 acclerated transfer upload speed.
In this case, we cannot find much difference.
But in longer distances, we can find the difference.

+++++++++++++++++++++++++

Encryption
----------------
There are two types of encryption

1) AES - 256   ( Advanced ENcryption standard )  - Single encryption
2) AWS - KMS ( Key management service )  - Double encryption  ( More secured )

Select the required encryption.

Select the bucket -- Properties ---Default Encription -- Edit -- Enable

+++++++++++++++++++++++

Metadata and Tags
------------------------
Metadata -- To provide more information about the object in key-value pairs.
Keys are predefinied. eg: Content-type, Content-language  etc

tags -- To provide more information about the object in key-value pairs.
Keys and values we need to provide.


Select the object ---> Properties, we can see the metadata and tags.

++++++++++++++++

ACL and Bucket policy
------------------------
Select the bucket --> Permissions tab
ACL Edit -- Add grantee
Enter canonical ID   -- Save Changes


Note: ACL  we can apply  at bucket level and object level

Select the Object and provide the access by entering canonical ID 

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

Bucket policy, we can apply only to  bucket.

Select the bucket ---> Permission , We can see bucket policy.
Bucket Policy are written in JSON Code.

Bucket policy should be definied in JSON code.
Its the job of AWS administrator.

+++++++++++
Select any object ---> Permissions tab
Observe: We do not have bucket policy.
As bucket policy, we need to apply at  bucket level only.


++++++++++++++++++++++++++++


Life cycle management
-----------------------------
Lets create a new bucket


Select the bucket --> Management tab --> Create lifecycle  rule

Rule name - Myrule
This rule applies to all objects  -- I Acknowledge
Transit  current version of objects between storage classes

Standard 1A  -- 30 Days  
Add transition

One Zone-IA   -- 60 Days

Create Rule


From now,  any object uploaded in the bucket will follow the rule for transition.

++++++++++++++++++++






IAM-user:

575552439309

user create by using cli: aws iam create-user --user-name curls
    
                           aws iam create-user --user-name sudha



add user to group by cli: aws iam add-user-to-group --user-name curls --group-name wipro

                          aws iam add-user-to-group --user-name sudha --group-name wipro

Login into aws console by CLI; https://My_AWS_Account_575552439309.signin.aws.amazon.com/console/



delete user by using aws cli:aws iam delete-user --user-name curls
Remove user from group by using aws cli: aws iam remove-user-from-group --user-name curls --group-name wipro

delete login profile of user ;aws iam delete-login-profile --user-name mahesh

to know the info about IAM -user:aws iam get-user --user-name harika

detach policy of user by using aws cli:aws iam detach-user-policy --user-name harika --policy-arn arn:aws:iam::575552439309:policy/TesterPolicy
 
delete group by using  aws cli: aws iam delete-group --group-name wipro


delte access key by using aws cli:aws iam delete-access-key --access-key-id AKIAYMAMZIQGTG7NXS4H --user-name mahesh

